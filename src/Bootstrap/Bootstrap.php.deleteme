<?php

namespace Osec\Bootstrap;

use Osec\Exception\Exception;
use Osec\Exception\ExceptionHandler;

/**
 * Bootstrap Class
 *
 * This class is responsible for loading all the requested class of the
 * system
 *
 * @since      2.0
 * @author     Time.ly Network, Inc.
 * @package App
 * @replaces Ai1ec_Loader
 */
class Bootstrap
{

    /*
     * Factory
     */
    public static function createLoader($ai1ec_base_dir) : self
    {
        global $OsecExceptionHandler, $ai1ec_base_url;
        $ai1ec_base_url = plugins_url(basename($ai1ec_base_dir), basename($ai1ec_base_dir));

        // Constants
        foreach (['constants-local.php', 'constants.php'] as $file) {
            if (is_file($ai1ec_base_dir.'/'.$file)) {
                require_once $ai1ec_base_dir.'/'.$file;
            }
        }
        if ( ! function_exists('osec_initiate_constants')) {
            throw new Exception (
                'No constant file was found.'
            );
        }
        if (function_exists('osec_initiate_constants_local')) {
            /** @noinspection PhpUndefinedFunctionInspection*/
            osec_initiate_constants_local($ai1ec_base_dir, $ai1ec_base_url);
        }
        osec_initiate_constants($ai1ec_base_dir, $ai1ec_base_url);

        // Exception handler
        $OsecExceptionHandler = new ExceptionHandler(
            'Exception',
            'ErrorException'
        );
        // if the user clicked the link to reactivate the plugin
        if (isset($_GET[ ExceptionHandler::DB_REACTIVATE_PLUGIN ])) {
            $OsecExceptionHandler->reactivate_plugin();
        }
        $soft_disable_message = $OsecExceptionHandler->get_disabled_message();
        if ($soft_disable_message !== false) {
            $OsecExceptionHandler->show_notices($soft_disable_message);
        }
        $OsecExceptionHandler->set_prev_er_handler(
            set_error_handler($OsecExceptionHandler->handle_error(...))
        );
        $OsecExceptionHandler->set_prev_ex_handler(
            set_exception_handler(
                $OsecExceptionHandler->handle_exception(...)
            )
        );

        // Regular startup sequence starts here
        require_once $ai1ec_base_dir.'/global-functions.php'; // Sadly 2 are left.

        $loader = new self($ai1ec_base_dir);
        return $loader;
    }

}
