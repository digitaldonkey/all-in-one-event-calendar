# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  php: circleci/php@1.1.0

# References section as descrribed in
#   @see https://carlalexander.ca/continuous-deployment-wordpress-directory-circleci/
references:
  # Environment variables
  #
  WP_CORE_DIR: &WP_CORE_DIR
               /tmp/wordpress
  WP_HOST: &WP_HOST
             open-source-event-calendar.test
  WP_ORG_PLUGIN_NAME: &WP_ORG_PLUGIN_NAME
                        open-source-event-calendar
  WP_ORG_USERNAME: &WP_ORG_USERNAME
                     digitaldonkey

  # Default container configuration
  #
  container_config: &container_config
    docker:
      - image: cimg/php:8.2-node
    environment:
      - WP_CORE_DIR: *WP_CORE_DIR
      - WP_HOST: *WP_HOST
      - WP_ORG_PLUGIN_NAME: *WP_ORG_PLUGIN_NAME
      - WP_ORG_USERNAME: *WP_ORG_USERNAME
    working_directory: ~/passwords-evolved

  workspace_root: &workspace_root
                    /tmp

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  copy_vendor: &copy_vendor
    run:
      name: Copy vendor directory
      command: cp -R /tmp/vendor .

  install_subversion: &install_subversion
    run:
      name: Install subversion
      command: sudo apt-get install subversion


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - run: php --version
      - run: node --version
      - run:
          name: Install dependencies
          command: composer install -n -o
      - run:
          name: Install WordPress
          command: bash .circleci/install-wp.sh
      - persist_to_workspace:
          root: .
          paths:
            - vendor
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - wordpress

#  say-hello:
#    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      # Specify the version you desire here
#      # See: https://circleci.com/developer/images/image/cimg/base
#      - image: cimg/base:current
#
#    # Add steps to the job
#    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      # Checkout the code as the first step.
#      - checkout
#      - run:
#          name: "Say hello"
#          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_test_deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
